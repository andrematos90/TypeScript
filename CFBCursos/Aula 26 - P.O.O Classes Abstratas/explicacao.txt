Em TypeScript, as classes abstratas são classes que não podem ser instanciadas diretamente. Elas são projetadas para serem usadas como classes base para outras classes e geralmente contêm métodos ou propriedades que são compartilhados por suas subclasses. As classes abstratas servem como um esqueleto ou um contrato que as subclasses devem seguir. Aqui estão algumas características importantes das classes abstratas em TypeScript:

Não podem ser instanciadas diretamente: Você não pode criar uma instância de uma classe abstrata usando o operador new. Em vez disso, elas são destinadas a serem estendidas por outras classes.

Pode conter métodos e propriedades abstratas: As classes abstratas podem conter membros abstratos, que são métodos ou propriedades declarados sem implementação. As subclasses devem fornecer uma implementação para esses membros abstratos.

Podem conter métodos e propriedades concretos: Além de membros abstratos, as classes abstratas também podem conter métodos e propriedades comuns com implementações.

Aqui está um exemplo de uma classe abstrata em TypeScript:

abstract class Forma {
  constructor(public cor: string) {}

  abstract calcularArea(): number; // Método abstrato
}

class Retangulo extends Forma {
  constructor(cor: string, public largura: number, public altura: number) {
    super(cor);
  }

  calcularArea(): number {
    return this.largura * this.altura;
  }
}

class Circulo extends Forma {
  constructor(cor: string, public raio: number) {
    super(cor);
  }

  calcularArea(): number {
    return Math.PI * this.raio * this.raio;
  }
}

const retangulo = new Retangulo("azul", 5, 10);
const circulo = new Circulo("vermelho", 3);

console.log(retangulo.calcularArea()); // Calcula a área do retângulo
console.log(circulo.calcularArea());   // Calcula a área do círculo

Neste exemplo, a classe Forma é uma classe abstrata que possui um membro abstrato calcularArea. As classes Retangulo e Circulo estendem a classe abstrata Forma e fornecem implementações para o método abstrato calcularArea. Isso garante que todas as subclasses de Forma tenham um método calcularArea, mas cada uma pode implementá-lo de maneira diferente.

Em resumo, as classes abstratas em TypeScript são úteis quando você deseja criar uma estrutura de herança na qual algumas partes da implementação são deixadas para as subclasses, garantindo que todas as subclasses sigam um contrato específico.