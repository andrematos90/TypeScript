Em TypeScript, os módulos são uma forma de organizar e estruturar seu código em partes independentes e reutilizáveis. Eles ajudam a dividir seu código em unidades lógicas, tornando-o mais organizado e fácil de gerenciar. Módulos também permitem a criação de dependências claras entre diferentes partes de seu código, promovendo a modularidade e a reutilização.

Existem duas formas principais de trabalhar com módulos em TypeScript:

Módulos Internos (Namespaces):
Antes da versão 1.5 do TypeScript, a forma principal de organizar código em módulos era usando namespaces, também conhecidos como módulos internos.
Os namespaces permitem agrupar código relacionado em uma única unidade, evitando poluição do escopo global.
Eles são definidos usando a palavra-chave namespace.
Exemplo de namespace:

namespace Matematica {
  export function somar(a: number, b: number): number {
    return a + b;
  }
}

const resultado = Matematica.somar(5, 3);


Módulos Externos (ES6 Modules):
A partir da versão 1.5 do TypeScript e em conformidade com o ECMAScript 2015 (ES6), você pode usar módulos externos para organizar seu código.
Módulos externos permitem que você defina módulos em arquivos separados e os importe/exporte quando necessário.
Os módulos externos usam as palavras-chave import e export para gerenciar as dependências entre módulos.
Exemplo de módulos externos:

Em matematica.ts:

export function somar(a: number, b: number): number {
  return a + b;
}

Em outro arquivo TypeScript:

import { somar } from "./matematica";

const resultado = somar(5, 3);
Aqui estão alguns conceitos-chave relacionados aos módulos em TypeScript:

Export: A palavra-chave export é usada para expor funções, classes, variáveis, ou outros elementos de um módulo para que eles possam ser importados por outros módulos.

Import: A palavra-chave import é usada para importar elementos de outros módulos para uso em seu código.

Módulos padrão: Além dos módulos nomeados que você cria, o TypeScript também suporta módulos padrão (por exemplo, import x from 'modulo'), que são amplamente utilizados para importar bibliotecas externas.

Compilação: Quando você compila um código TypeScript que usa módulos externos, o compilador gera código JavaScript que é compatível com módulos do ECMAScript 2015, como CommonJS, AMD, ou SystemJS, dependendo da configuração.

Em resumo, os módulos em TypeScript são uma maneira eficaz de organizar seu código em unidades independentes e reutilizáveis, permitindo uma estrutura mais organizada, uma melhor gerência de dependências e a promoção da modularidade em seu projeto. Eles desempenham um papel fundamental na criação de código TypeScript robusto e manutenível.